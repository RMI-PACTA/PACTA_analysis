---
# Starter pipeline Start with a minimal pipeline that you can customize
# to build and deploy your code.  Add steps that build, run tests,
# deploy, and more: https://aka.ms/yaml

trigger:
  - master
  - azure-pipelines

pool:
  vmImage: ubuntu-latest

variables:
  imageRepository: '2dii_pacta'
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ddd45595-876e-4212-92f0-8196a5c2fe71'
  containerRegistry: 'transitionmonitordockerregistry.azurecr.io'
  dockerfileRepoPath: 'PACTA_analysis/transitionmonitor_docker/Dockerfile'
  dockerfilePath: '$(Build.SourcesDirectory)/$(dockerfileRepoPath)'
  testingStorageAccountName: 'tmdockerstorage'
  testingShareName: 'testing-data'
  # use PR number if it's a PR, otherwise branch name.
  ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    dockerTag: 'PR$(System.PullRequest.PullRequestNumber)'
  ${{ elseif eq(variables['Build.Reason'], 'PullRequest') }}:
    dockerTag: '$(Build.SourceBranchName)'
  ${{ else }}:
    dockerTag: '$(Build.Reason)'
    dockerRunFlags: |
      --rm \
      --platform linux/x86_64 \
      --pull=never \
      --network none \
      --user 1000:1000 \
      --memory=8g \
      --memory-swappiness=0

resources:
  repositories:
    - repository: create_interactive_report
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/create_interactive_report
      ref: master
    - repository: r2dii.climate.stress.test
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/r2dii.climate.stress.test
      ref: master
    - repository: r2dii.stress.test.data
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/r2dii.stress.test.data
      ref: master
    - repository: pacta-data
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/pacta-data
      ref: master
  containers:
    - container: builder
      image: ubuntu:18.04
    - container: TMRunner
      image: $(imageRepository):$(Build.BuildNumber)
      endpoint: TransitionMonitorDockerRegistry
      volumes:
        - working_dirs/:/bound/working_dir
        - user_results/4:/user_results

stages:
  - stage: build_image
    displayName: Build and Push Docker Image
    jobs:
      - job: Build
        displayName: Checkout Repos & Build
        steps:
          - checkout: self  # PACTA_analysis repo
          - checkout: create_interactive_report
          - checkout: r2dii.climate.stress.test
          - checkout: r2dii.stress.test.data
          - checkout: pacta-data
          # TODO: Add Tagging steps job
          - task: Docker@2
            displayName: Build Transition Monitor Docker image
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              buildContext: $(Build.SourcesDirectory)
              containerRegistry: $(dockerRegistryServiceConnection)
              addPipelineData: false
              tags: |
                $(dockerTag)
                $(Build.BuildNumber)
                $(Build.SourceVersion)
  - stage: test_image
    displayName: Test Docker Image
    jobs:
      - job: test_PA2021NO
        displayName: Test PA2021NO
        steps:
          - checkout: none
          # - task: Docker@2
          #   displayName: Login to ACR
          #   inputs:
          #     command: login
          #     containerRegistry: $(dockerRegistryServiceConnection)
          # - script: docker pull $(imageRepository):$(Build.BuildNumber)
          #   workingDirectory: $(Build.SourcesDirectory)
          #   displayName: 'Docker Pull'
          # - task: AzureCLI@2
          #   displayName: Download run script from Azure File Share
          #   inputs:
          #     azureSubscription: tm-docker-AzureResourceManager
          #     scriptType: bash
          #     scriptLocation: inlineScript
          #     workingDirectory: $(Build.SourcesDirectory)
          #     inlineScript: |
          #       az storage file download \
          #       --path run-like-constructiva-flags.sh \
          #       --share-name $(testingShareName) \
          #       --account-name $(testingStorageAccountName)
          - task: AzureCLI@2
            displayName: Download files from Azure File Share
            inputs:
              azureSubscription: tm-docker-AzureResourceManager
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az storage file download-batch \
                --source $(testingShareName)/PA2021NO \
                --destination $(Build.SourcesDirectory) \
                --account-name $(testingStorageAccountName)
          - script: ls -lR $(Build.SourcesDirectory)
          - script: echo "I can run inside the container (it starts by default)"
            target:
              container: TMRunner
          - script: ls -lR /bound
            target:
              container: TMRunner
          - script: /bound/bin/run-r-scripts "Test_PA2021NO"
            target:
              container: TMRunner
          - task: Docker@2
            inputs:
              command: stop
              container: TMRunner

          # - task: Bash@3
          #   displayName: Run PA2021NO Portfolio
          #   inputs:
          #     filePath: run-like-wim-PA2021NO.sh
          #     workingDirectory: $(Build.SourcesDirectory)
          #     arguments: |
          #       "-u 4"
          #       "-p Test_PA2021NO"
          #       "-t $(Build.BuildNumber)"
