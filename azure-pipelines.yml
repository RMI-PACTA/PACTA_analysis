---
# Starter pipeline Start with a minimal pipeline that you can customize
# to build and deploy your code.  Add steps that build, run tests,
# deploy, and more: https://aka.ms/yaml

trigger:
  - master
  - azure-pipelines

pool:
  vmImage: ubuntu-latest

variables:
  imageRepository: '2dii_pacta'
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ddd45595-876e-4212-92f0-8196a5c2fe71'
  containerRegistry: 'transitionmonitordockerregistry.azurecr.io'
  dockerfileRepoPath: 'PACTA_analysis/transitionmonitor_docker/Dockerfile'
  dockerfilePath: '$(Build.SourcesDirectory)/$(dockerfileRepoPath)'
  testingStorageAccountName: 'tmdockerstorage'
  testingShareName: 'testing-data'
  # use PR number if it's a PR, otherwise branch name.
  ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    dockerTag: 'PR$(System.PullRequest.PullRequestNumber)'
  ${{ elseif eq(variables['Build.Reason'], 'PullRequest') }}:
    dockerTag: '$(Build.SourceBranchName)'
  ${{ else }}:
    dockerTag: '$(Build.Reason)'

resources:
  repositories:
    - repository: create_interactive_report
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/create_interactive_report
      ref: master
    - repository: r2dii.climate.stress.test
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/r2dii.climate.stress.test
      ref: master
    - repository: r2dii.stress.test.data
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/r2dii.stress.test.data
      ref: master
    - repository: pacta-data
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/pacta-data
      ref: master

stages:

  - stage: build_image
    displayName: Build and Push Docker Image
    jobs:
      - job: BuildAndPushDockerImage
        displayName: Checkout Repos & Build
        steps:
          - checkout: self  # PACTA_analysis repo
          - checkout: create_interactive_report
          - checkout: r2dii.climate.stress.test
          - checkout: r2dii.stress.test.data
          - checkout: pacta-data
          - task: Docker@2
            displayName: Build Transition Monitor Docker image
            inputs:
              command: build
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              buildContext: $(Build.SourcesDirectory)
              addPipelineData: false
              tags: |
                $(dockerTag)
                $(Build.BuildNumber)
                $(Build.SourceVersion)
              arguments:
                --build-arg image_tag="$(Build.BuildNumber)"
          - task: Docker@2
            displayName: Push Transition Monitor Docker image to Registry
            inputs:
              command: push
              # repository: $(imageRepository)
              repoositry: $(containerRegistry)/$(imageRepository)
              containerRegistry: $(dockerRegistryServiceConnection)
              addPipelineData: false
              tags: |
                $(dockerTag)
                $(Build.BuildNumber)
                $(Build.SourceVersion)

  - stage: test_image
    displayName: Test Docker Image
    variables:
      portfolioName: "general2020Q4"
    jobs:
      - job: test_PA2021NO
        displayName: "Test portfolio"
        steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(dockerRegistryServiceConnection)
          - checkout: none
          - task: AzureCLI@2
            displayName: Download run script from Azure File Share
            inputs:
              azureSubscription: tm-docker-AzureResourceManager
              scriptType: bash
              scriptLocation: inlineScript
              workingDirectory: $(Build.SourcesDirectory)
              inlineScript: |
                az storage file download \
                --path run-like-constructiva-flags.sh \
                --share-name $(testingShareName) \
                --account-name $(testingStorageAccountName)
          - task: Bash@3
            displayName: Create portfolio directory
            inputs:
              targetType: inline
              script: mkdir -p $(Build.SourcesDirectory)/$(portfolioName)/
          - task: AzureCLI@2
            displayName: Download Portfolio files from Azure File Share
            inputs:
              azureSubscription: tm-docker-AzureResourceManager
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az storage file download-batch \
                --source $(testingShareName)/$(portfolioName) \
                --destination $(Build.SourcesDirectory)/$(portfolioName) \
                --account-name $(testingStorageAccountName)
          - task: Bash@3
            displayName: Inspect file structure
            inputs:
              targetType: inline
              # filePath: run-like-constructiva-flags.sh
              workingDirectory: $(Build.SourcesDirectory)
              script: |
                ls -laR
          - task: Bash@3
            displayName: Change file permissions
            inputs:
              targetType: inline
              # filePath: run-like-constructiva-flags.sh
              workingDirectory: $(Build.SourcesDirectory)
              script: |
                chmod +x run-like-constructiva-flags.sh
          - task: Bash@3
            displayName: Pull Docker image
            inputs:
              targetType: inline
              # filePath: run-like-constructiva-flags.sh
              workingDirectory: $(Build.SourcesDirectory)
              script: |
                docker pull \
                  $(containerRegistry)/$(imageRepository):$(Build.BuildNumber)
          - task: Bash@3
            displayName: rename Docker image
            inputs:
              targetType: inline
              # filePath: run-like-constructiva-flags.sh
              workingDirectory: $(Build.SourcesDirectory)
              script: |
                docker tag \
                  $(containerRegistry)/$(imageRepository):$(Build.BuildNumber) \
                  $(imageRepository):$(Build.BuildNumber)
          - task: Bash@3
            displayName: Inspect Docker image
            inputs:
              targetType: inline
              # filePath: run-like-constructiva-flags.sh
              workingDirectory: $(Build.SourcesDirectory)
              script: |
                docker images
          - task: Bash@3
            displayName: Run $(portfolioName) Portfolio
            inputs:
              targetType: inline
              # filePath: run-like-constructiva-flags.sh
              workingDirectory: $(Build.SourcesDirectory)
              script: |
                ./run-like-constructiva-flags.sh \
                -v \
                -u 4 \
                -p $(portfolioName) \
                -t i(Build.BuildNumber)
