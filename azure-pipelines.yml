---
# Starter pipeline Start with a minimal pipeline that you can customize
# to build and deploy your code.  Add steps that build, run tests,
# deploy, and more: https://aka.ms/yaml

trigger:
  - master
  - azure-pipelines

pool:
  vmImage: ubuntu-latest

variables:
  imageRepository: '2dii_pacta'
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ddd45595-876e-4212-92f0-8196a5c2fe71'
  containerRegistry: 'transitionmonitordockerregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/PACTA_analysis/transitionmonitor_docker/Dockerfile'
  tag: '$(Build.BuildId)'
  testingStorageAccountName: 'tmdockerstorage'
  testingShareName: 'testing-data'

resources:
  repositories:
    - repository: create_interactive_report
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/create_interactive_report
      ref: master
    - repository: r2dii.climate.stress.test
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/r2dii.climate.stress.test
      ref: master
    - repository: r2dii.stress.test.data
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/r2dii.stress.test.data
      ref: master
    - repository: pacta-data
      type: github
      endpoint: 2DegreesInvesting  # Servce connection name
      name: 2DegreesInvesting/pacta-data
      ref: master

stages:
  - stage: build_image
    displayName: Build and Push Docker Image
    jobs:
      - job: Build
        displayName: Checkout Repos & Build
        steps:
          - script: echo Hi, Alex is great.
          # - checkout: self  # PACTA_analysis repo
          # - checkout: create_interactive_report
          # - checkout: r2dii.climate.stress.test
          # - checkout: r2dii.stress.test.data
          # - checkout: pacta-data
          # # TODO: Add Tagging steps job
          # - task: Docker@2
          #   displayName: Build Transition Monitor Docker image
          #   inputs:
          #     command: buildAndPush
          #     repository: $(imageRepository)
          #     dockerfile: $(dockerfilePath)
          #     buildContext: $(Build.SourcesDirectory)
          #     containerRegistry: $(dockerRegistryServiceConnection)
          #     addPipelineData: false
          #     tags: |
          #       $(tag)
  - stage: test_image
    displayName: Test Docker Image
    jobs:
      - job: test_PA2021NO
        displayName: Test PA2021NO
        steps:
          - checkout: none
          - script: pwd
          - script: echo $(Build.SourcesDirectory)
          - task: AzureCLI@2
            displayName: Download files from Azure File Share
            inputs:
              azureSubscription: tm-docker-AzureResourceManager
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az storage file download-batch \
                --source $(testingShareName)/PA2021NO \
                --destination $(Build.SourcesDirectory) \
                --account-name $(testingStorageAccountName)
          - script: run-like-wim-PA2021NO.sh
          # - task: AzureCLI@2
          #   displayName: Azure CLI - Copy files
          #   inputs:
          #     azureSubscription: tm-docker-AzureResourceManager
          #     scriptType: bash
          #     scriptLocation: inlineScript
          #     inlineScript: |
          #       az storage file download \
          #       --account-name $(testingStorageAccountName) \
          #       --share-name $(testingShareName) \
          #       --path "run-like-wim.sh" \
          #       --dest "foo.sh" \
          #       i-output none
